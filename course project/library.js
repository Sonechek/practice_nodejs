const {cloneDeep} = require('./module')class WorkData {    _json // данные считанные из файла    _tmp    get json() {        return this._tmp    }    constructor(file_name) {        this._json = require(file_name)        this._tmp = cloneDeep(this._json)    }    orderBy(fields, directs) {        this._json.sort((a, b) => comparator(a, b, fields, directs))        return this._json    }}class WorkCSV {    _json    _tmp    constructor(file_name, del) {        this.fs = require("fs")        this.csvjson = require("csvjson")        this._json = this.csv_to_json(file_name, del)            .map(x => { return {"id": +x.id,"nameSt": x.nameSt, "sex": +x.sex, "age": +x.age, "idGr": +x.idGr   }})        this._tmp = cloneDeep(this._json)    }    csv_to_json(nameFile, del=',') {        let textCSV = this.fs.readFileSync(nameFile, 'utf-8')        return this.csvjson.toObject(textCSV, { delimiter: del })    }    orderBy(fields, directs) {        this._json.sort((a, b) => comparator(a, b, fields, directs))        return this._json    }}module.exports = {    WorkData,    WorkCSV}